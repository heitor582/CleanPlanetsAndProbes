plugins {
    id 'java-conventions'
    id 'application'
    id 'jacoco-report-aggregation'
    id 'org.springframework.boot' version '2.7.7'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.flywaydb.flyway' version '9.11.0'
}

bootJar {
    archiveName 'application.jar'
    destinationDirectory.set(file("${rootProject.buildDir}/libs"))
}

group = 'com.study.infrastructure'

dependencies {
    implementation(project(":domain"))
    implementation(project(":application"))

    implementation ('org.flywaydb:flyway-core')
    runtimeOnly ('org.postgresql:postgresql')

    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }

    implementation('org.springdoc:springdoc-openapi-webmvc-core:1.6.14')
    implementation('org.springdoc:springdoc-openapi-ui:1.6.14')

    implementation('org.springframework.boot:spring-boot-starter-undertow')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')

    testImplementation('org.springframework.boot:spring-boot-starter-test')

    testRuntimeOnly('com.h2database:h2')
}

testCodeCoverageReport {
    reports {
        xml {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/jacocoTestReport.xml")
        }

        html {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/")
        }
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: '**/configuration')
        }))
    }
}

tasks.named("jacocoTestReport"){
    dependsOn tasks.named("testCodeCoverageReport", JacocoReport)
}